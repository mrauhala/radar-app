# PID file location that nginx user can write to
pid /var/run/nginx/nginx.pid;

server {
    listen 8080;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # PWA specific headers for main document
    add_header Cache-Control "public, max-age=0, must-revalidate" always;
    
    # Service worker must be served with correct MIME type and no-cache
    location /sw.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        add_header Service-Worker-Allowed "/";
        add_header Content-Type "application/javascript";
        try_files $uri =404;
    }
    
    # Manifest file
    location /manifest.json {
        add_header Cache-Control "public, max-age=86400";
        add_header Content-Type "application/manifest+json";
        try_files $uri =404;
    }
    
    # Browser config file
    location /browserconfig.xml {
        add_header Cache-Control "public, max-age=86400";
        add_header Content-Type "application/xml";
        try_files $uri =404;
    }
    
    # Icon files - cache for longer
    location /icons/ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }
    
    # Static assets - cache for moderate time
    location ~* \.(js|css)$ {
        add_header Cache-Control "public, max-age=86400";
        try_files $uri =404;
    }
    
    # Main app - always serve index.html for SPA routing
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/manifest+json
        application/xml
        image/svg+xml;

    # Handle CORS for radar data requests
    location ~* \.(wms|GetCapabilities|GetMap) {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        try_files $uri $uri/ =404;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
